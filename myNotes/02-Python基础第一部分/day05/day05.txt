day04回顾
  字符串方法
    对象.方法名(方法传参列表)
  
  S.isdigit()
  S.isalpha()
  S.count(sub[, start[, end]]) 
  S.find(sub, start, end)
  S.replace(old, new[, count])
  S.startswith(prefix)
  S.endswith(suffix)
  >>> help(str)  # 查看字符串的文档帮助

字符串的格式化表达式
  格式化字符串 % 参数
  格式化字符串 % (参数1,参数2, ....)

  %d
  %s
  %f
  %x
  %o
  %g
  %e
  %%

 占位符 - + 0 宽度.精度    类型码

循环语句
  while语句
  for 语句

  while 语法:
    while 真值表达式:
        语句块1
    else:
        语句块2

while 语句的嵌套

break语句

死循环 death loop
  

for 语句
  作用：
  　　用来遍历可迭代对象的数据元素

可迭代对象是指能依次获取数据元素的对象
可迭代对象包括:
  字符串 str
  ---以下后再会讲----
  列表 list
  元组 tuple
  字典 dict
  集合set
  ...

for 语句语法:
  for 变量列表　in 可迭代对象:
      语句块1
  else:
      语句块2

示例见:
   code/01_for.py

练习:
  任意输入一个字符串，判断这个字符串中有几个空格' '
  (要求不允许用S.count方法)
  建议使用for语句实现

for 语法说明:
  1. 可迭代对象每次提供一个元素依次赋值给变量列表中的变量，赋值完毕后执行语句块1,重复执行此步骤，直到可迭代对象不能提供数据为止
  2. 可迭代对象提供完所有元素后，执行else子句部分的语句块２，然后退出此for语句
  3. else子句部可以省略（同while语句类似)
  4. 当在循环内部用break终止循环时，else子句部分语句不会执行



range函数
  格式见:
    >>> help(range)

函数:
  range(stop)  从零开始，每次生成一个整数后加１操作，直到stop为止（不包含stop)
  range(start, stop[, step]) 从start开始，每次生成一个整数后移动step，直到stop为止(不包含stop,且step可以是负整数)
作用:
  用来创建一个生成一系列整数的可迭代对象(也叫整数序列生成器)
说明:
  range返回的对象是可迭代对象.可以用于for语句中
示例:
  range(4)         # 生成0,1,2,3
  range(3, 6)      # 生成 3, 4, 5
  range(1, 10, 2)  # 生成 1,3,5,7,9
  range(5, 0, -2)  # 生成 5,3,1
  range(4, 0)      # 空

练习:
  用for语句打印 1~20的整数，打印在一行
  1 2 3 4 5 6 ... 18 19 20

练习:
  1. 求 100 以内有哪儿些整数与　自身 + 1 的乘积再对11 求余结果等于8?

  2. 计算 1 + 3 + 5 + 7 +.... + 99的和
    用while 和 for语句两种方法来实现



for语句嵌套:
  for语句内部可以放任意语句,包含for语句和while语句

示例:
  for x in "ABC":
      for y in '123':
          print(x + y)

  # 思考 count 的值是多少？
  count = 0
  for x in range(5):
      for y in range(10):
          count += 1
  print(count)  # 50
  print(x, y)  # x,y的值是多少?
练习:
  1 写程序．输入一个整数n 代表正方形的宽度和高度．
  打印数字组成的正方形:
   如
     输入: 5
   打印:
    1 2 3 4 5
    1 2 3 4 5
    1 2 3 4 5
    1 2 3 4 5
    1 2 3 4 5
   　　输入: 4 
   打印:
    1 2 3 4
    1 2 3 4
    1 2 3 4
    1 2 3 4

  2 写程序．输入一个整数n 代表正方形的宽度和高度．
  打印数字组成的正方形:
   如
     输入: 5
   打印:
    1 2 3 4 5
    2 3 4 5 6
    3 4 5 6 7
    4 5 6 7　8
    5 6 7　8 9
   　　输入: 4 
   打印:
    1 2 3 4
    2 3 4 5
    3 4 5 6
    4 5 6 7


continue 语句
  作用:
    用于循环语句(while, for语句)中，不再执行本次循环内continue之后的语句，重新开始一次新的循环
  说明:
    1.　在while语句中，执行continue语句将会直接跳转到while语句的真值表达式处重新判断循环条件
    2. 在for语句中，执行 continue语句，将会从可迭代对象中取下一个元素，绑定变量后再次进行循环
  示例:
    见: code/03_continue.py
    for x in range(5):
        if x == 2:
            continue
        print(x)

练习:
  输入一个整数用begin绑定，再输入一个整数用end绑定，打印出从begin~end(包含end)的所有偶数
    (建议用continue语句跳过奇数)


# 用while循环，实现打印10以内的偶数
  i = 0
  while i < 10:
     print(i)
     i += 2
  用continue 和 while语句的实现方法:
  见: code/04_while_continue.py

练习:
  求 1 ~ 100(包含100) 之间所有不能被5,7,11整除的数的和是多少?
    (建议用continue语句实现)


循环总结:
  while 语句
  for 语句
     - 字符串
     - range() 函数
  break 语句
  continue 语句

练习:
  输入一个整数n, 判断这个整数是否是素数(prime)
    (素数是指只能被1 和自身整除的数)
    如:
      2 3 5 7 11...
    方法：
      用排除法.一但n能被2~n-1的数整除就不是素数，否则就一定是素数


列表 list
  列表是由一系列特定元素组成的，元素和元系之间没有任何关联关系，但他们之间有先后顺序关系
  列表是一种容器
  列表是序列的一种
  列表是可以被改变的序列

python中的序列类型简介(sequence)
  字符串 str
  列表 list
  元组 tuple
  字节串 bytes
  字节数组 bytearray

创建空列表的字面值
  L = []  # L绑定空列表

创建非空列表:
  L = [1, 2, 3, 4]
  L = ["北京", "上海", "重庆"]  
  L = [1, 'two', 3, '四']
  L = [1, 2, [3.1, 3.2, 3.3], 4] 

列表的构造(创建)函数list
  list()  生成一个空的列表 等同于[]
  list(iterable)  用可迭代对象创建一个列表
示例:
  L = list()  L 为空列表,等同于 L = []
  L = list("ABCD")  # L->['A','B','C','D']
  L = list(range(1, 10, 2))

列表的运算:
  算术运算
    + += * *= 
  + 用于拼接列表
    x = [1,2,3]
    y = [4,5,6]
    z = x + y  # z = [1,2,3,4,5,6]
  +=用于原列表与左侧可迭代对象进行拼接,生成新的列表
    x = [1,2,3]
    x += [4,5,6]  # x = [1,2,3,4,5,6]
    x = [1,2,3]
    x += 'ABC'  # += 右侧必须是可迭代对象

  * 生成重复的列表
    x = [1,2,3] * 2  # x = [1,2,3,1,2,3]
  *= 用于生成重复的列表，同时用变量绑定新列表
    x = [1, 2]
    x *= 3  # x = [1,2,1,2,1,2]
  
  列表的比较运算:
    运算符:
      < <= > >= == !=
    示例:
      x = [1,2,3]
      y = [2,3,4]
      x != y     # True
      x > [1,2]  # True
      x < y      # True
      [1,3,2] > [1,2,3] # True
      ['AB', 'CD'] > ['AC', 'BD']  # False
      [1, 'two'] > ['two', 1]  # TypeError



练习:
  1. 输入一个整数，代表树干的高度.
    打印一棵"圣诞树"
    如:
     输入:2
    打印
      *
     ***
      *
      *
     输入:3
    打印
       *
      ***
     *****
       *
       *    
       *
  2. 用循环语句生成如下字符串
    'ABC.....XYZ'
    'AaBbCc......XxYyZz'
    提示:
       用ord和chr函数结合循环语句实现

  3. 算出 100 ~ 999 以内的水仙花数(Narcissistic number)
     水仙花数是指百位的3次方加上十位的3次方加上个位的3次方等于原数的数字
       例如:
         153 等于 1**3 + 5**3 + 3**3
     参考答案:
       153, 370, ...

