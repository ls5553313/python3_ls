

day03笔记：

return 语句
  语法:
    return [表达式]
    [] 代表可以省略
  作用：
    用于函数中，结束当前函数的执行，返回到调用该函数的地方，同时返回一个对象的引用关系
  说明:
    1. return语句后跟的表达式可以省略，省略后相当于 return None
    2. 如果函数没有return语句，则函数执行完最后一条语句后返回None(相当于在最后加了一条return None语句)
    3. 函数调用一定会返回一个对象的引用


练习:
  写一个函数 mymax, 实现返回两个数的最大值:
     如:
        def mymax(a, b):
           ... 此处自己填写
        print(mymax(100, 200))  # 200
        print(mymax(50, 10))    # 50
        print(mymax('ABC', 'ABCD')) # ABCD
  2. 写一个函数 input_number
      def input_number():
          ....
      此函数用来获取用户循环输入的整数，当用户输入负数时结束输入
      将用户输入数以列表的形式返回，再用内建函数max, min, sum 示出用户输入的最大值，最小值及和:
      如:
        L = input_number()
        print(L)  # 打印此列表
        print("用户输入的最大数是:", max(L))
        print("用户输入的最小数是:", min(L))
        print("用户输入的和是:", sum(L))


python 函数的参数传递
  传递方式
    位置传递
      序列传参
    关键字传参
      字典关键字传参

位置传参:
   实际参数(实参)的对应关系与形式参数(形参)的对应关系是按位置来依次对应的
  示意
    def myfun(a, b, c):
        pass

    myfun(1, 2, 3)
  说明:
    实际参数和形式参数通过位置进行传递的匹配
    实参个数必须与形参个数相同


序列传参:
  序列传参是指在函数调用过程中，用 * 将序列拆解后按位置传参的方式进行参数传递

示例:
  def myfun(a, b, c):
      pass
  s = [1, 2, 3]
  myfun(*s)  # * 表示把s拆开
  s2 = "ABC"
  myfun(*s2)

关键字传参:
  关键字传参是指传参时，按着形参的名称给形参赋值
  实参和形参按名称进行匹配

  示例:
    def myfun(a, b, c):
        pass

    myfun(b=22, c=33, a=11)  # 等同于myfun(11,22,33)
    myfun(c=3, b=2, a=1)
  说明:
    实参和形参可以不按位置匹配

字典关键字传参：
  是指实参为字典，将字典用 ** 拆解后进行关键字传参

  示例:
    def myfun(a, b, c):
        pass
    d = {'c': 33, 'b': 22, 'a': 11}
    myfun(**d)  # 拆解字典后再传参
  说明:
    字典的键名和形参名必须一致
    字典键名必须为字符串
    字典的键名要在形参中存在


函数的综合传参
  函数传参方式，在能确定形参能唯一匹配到相应实参的情况下可以任意组合

示例:
    def myfun(a, b, c):
        pass
    myfun(100, *[200, 300])  # 正确
    myfun(*'AB', 300)        # 正确
    myfun(100, c=300, b=200) # 正确 
    myfun(1, **{'c': 3, 'b': 2}) # 正确
    myfun(**{'c': 3, 'b': 2}, a=1) # 正确
    myfun(b=2, c=3, 1)  # 错误,不能确定1给谁?
说明:
  传参时先位置传参，后关键字传参

练习：
  1. 写一个函数sum3(a, b, c):
     用于返回三个数的和
     写一个函数pow3(x) 用于返回x的三次方(立方)

     1) 用以上函数计算
        1**3 + 2 ** 3 + 3**3的和
     2)  计算 1 + 2 + 3 的和的立方
         即(1+2+3)**3



-------- 以下讲的是函数的形参（如何接收实参)-----
函数的缺省参数
  语法:
    def 函数名(形参名1=默认实参1, 形参名2=默认实参2, ...):
        ...
  示例:
    def info(name, age=1, address="未填写"):
        print(name, "今年",
              age, '岁, 家庭地址是:', address)
    info('tarena', 15)
    info('小魏', 20, '北京市朝阳区')
    info('小李')
  
  说明
    1. 缺省参数必须自右至左依次存在,如果一个参数有缺省参数，则其右侧的所有参数都必须有缺省参数
      如:
        def test(a, b=10, c):  # <---是错的
             pass
    2. 缺省参数可以有0个或多个,甚至全部都有缺省参数

练习 ：
  1. 写一个函数 mysum(), 可以传入两个实参或三个实参.
     1) 如果传入两个实参，则返回两个实参的和
     2) 如果传入三个实参，则返回前两个实参的和对第三个实参求余的结果

    print(mysum(1, 100))    # 101
    print(mysum(2, 10, 7))  # 5 返回:(2+10) % 5


函数的形参定义方式:
  位置形参
  星号元组形参
  命名关键字形参
  双星号字典形参

位置形参:
  语法:
    def 函数名(形参名1, 形参名2, ...):
        语句块

星号元组形参:
  语法
    def 函数名(*元组形参名):
        语句
  作用：
    收集多合的位置传参
  说明:
    元组形参名通常用: 'args'
  示例见:
    code/08_star_args.py

练习:
  写一个函数，mysum , 可以传入任意个实参的数字，返回所有实参的和
    def mysum(.....):
        ......
    print(mysum(1, 2, 3, 4))  # 10
    print(mysum(2,4,6))  # 12




命名关键字形参
  语法:
    def 函数名(*, 命名关键字形参):
        语句
    或
    def 函数名(*args, 命名关键字形参):
        语句
  作用：
    所有的参数都必须用关键字传参或字典关键字传参传递

  示例见:
     09_named_keywork_args.py


双星号字典形参:
  语法:
    def 函数名(**字典形参名):
        语句
  作用：
    收集多合的关键字传参
  说明:
     通常字典形参名定为: "kwargs"
  示例见:
    10_star_star_dict_kwargs.py
函数的参数说明:
  缺省参数，位置形参，星号元组形参，命名关键字形参和双号星字典形参可以混合使用

函数参数自左至右的顺序为:
  位置形参
  星号元组形参
  命名关键字形参
  双星号字典形参

综合示例:
  def f1(a, b, *args, c, **kwargs):
      pass
  f1(1, 2, 3, 4, d=6, c=5, e=7)


函数的不定长参数:
  def fn(*args, **kwargs):
      pass
  # 可以接收任意的位置传参和关键字传参


练习:
  写一个myrange函数，此函数返回一个符合range规则的整数列表
  如:
    L = myrange(3)
    print(L)  # [0,1,2]
    L = myrange(3, 6)
    print(L)  # [3, 4, 5]
    L = myrange(1, 10, 3)
    print(L)  # [1, 4, 7]



练习：
　　　1. 素数prime函数练习
      1)  写一个函数isprime(x)  判断x是否为素数，如果是素数，返回True,否则返回False
      2) 写一个函数prime_m2n(m, n), 返回从m开始到n结束(不包含n)的范围内的素数列表
        如:
          L = prime_m2n(1, 10)
          print(L) # [2,3,5,7]
      3) 写一个函数primes(n), 返回指定范围内素数(不包含n)的全部素数的列表,并打印这些素数
        如:
          L = prime(20)
          print(L)  # [2,3,5,7,11,13,17,19]
        1) 打印 100以内的全部素数
        2) 打印 100以内全部素数的和

    2. 修改之前的学生信息管理程序:
      编写两个函数用于封装 录入学生信息　和　打印学生信 息的功能
        1) 
        def input_student():
        　　　　#此函数获取学生信息，并返回学生信息的字典的列表
            ....
        2. 
        def output_student(L):
            # 以表格形式再打印学生信息
            ...
      验证测试：
      　　L = input_studnet()
        output_student(L)
        print("再添加几个学生信息")
        L += input_student()
        print("添加学生后的学生信息如下:")
        output_student(L)








