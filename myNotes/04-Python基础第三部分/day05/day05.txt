day04回顾
  迭代器　　和　生成器

it = iter(可迭代对象)  # 可迭代对象返回迭代器
next(it)  可以用迭代器取值
　　next 取值时，没有数据时将收到StopIteration异常通知

生成器
  yield 语句
    用于函数中，把函数当做生成器函数使用

生成器有两种:
  生成器函数
  　　　def mygenfun():
         yield 1
  生成器表达式
     (x ** 2 + 1 for x in range(10))


字节串 bytes 和 字节数组 bytearray

    不可变              可变的
    序列                序列
    存字节              存字节

+ += * *= 
< > <= >= == !=
in / not in 
索引／切片取值　完全一样
bytearray 可以索引／切片赋值

bytearray的方法
   ba.clear()
   ba.append(n)
   ba.remove(value)
   ba.reverse()
   ....

迭代工具函数
  zip(iter1, iter2, ...)
  enumerate(iter1, start=0)



　　　　　　　　　　　　　　　　　　　　　
文件　　file
  什么是文件
　　　　文件是数据存储的单位
    文件通常用来长期存储数据
    文件中的数据是以字节为单位进行顺序存储的

文件的操作流程
  1. 打开文件
  2. 读写文件
  3. 关闭文件
  任何的操作系统，一个应用程序同时打开文件的数量有最大数限制

文件的打开函数 open
  open(file, mode='rt') 用于打开一个文件，返回此文件对应的文件流对象，如果打开失败，则会触发OSError错误！

文件关闭方法:
  F.close()  关闭，释放系统资源
示例见:
   01_fileopen.py

python文件读写的类型有两种:
   文本文件　(text file)
   二进制文件 (binary file)

文本文件的操作
   默认文件中存储的都为字符数据，以行为单位进行分隔，在python内部统一用'\n'作为换行进行分隔
   对文本文件读写需要用字符串(str)进行数据读取和写入

各种操作系统的换行符:
  Linux换行符       : '\n'
  Window换行符      : '\r\n'
  旧的Macintosh换行符: '\r'
  新的Mac Os 换行符  : '\n'

练习:
  自己写一个文件'info.txt' 内部存一些文字信息
       张三 20 100
       李四 21 96
       小王 22 98
  写程序将这些数据读取出来，打印在屏幕终端上

F.readlines 示例见:
  03_file_readlines_text.py

文本文件的写操作
  文档见:
    python_base_docs_html/文件.html

练习:
  1. 写一个程序,从键盘输入如下信息:
      姓名  和 电话号码
    如 :
      请输入姓名: xiaozhang
      请输入电话: 13888888888
      请输入姓名: xiaoli
      请输入电话: 13999999999
      请输入姓名: <回车>
    把从键盘读取的信息存入'phone_book.txt'文件中
      然后用 sublime text 打开并查看写入的内容
  2. 写一个读取'phone_book.txt'文件的程序, 把保存的信息以表格的形式打印出来
     +-----------+-----------------+
     |  name     |   number        |
     +-----------+-----------------+
     | xiaozhang |   1388888888    |
     +-----------+-----------------+


文本文件的迭代读取
   open()函数返回来的文件流对象是可迭代对象

示例:
  f = open('abc.txt')
  # 每次取出一行,相当于line = f.readline()
  for line in f:
      print(line)
  f.close()

标准输入输出文件
  模块名: sys
  sys.stdin  (默认为标准键盘输入设备)
     ctrl + d 输入文件末尾标识
  sys.stdout (默认为屏幕终端)
  sys.stderr (默认为屏幕终端)

标准文件不需要打开和关闭就可以使用

F.flush 用法见:
  09_flush.py


二进制文件操作:
  'b' 二进制(binary)文件操作

  对于二进制文件的读写通常需要用字节串(bytes)进行操作

示例:
   f =  open("infos.txt", 'rb')  # 以二进制模式打开
   # 在此处对f绑定的对象以bytes为单位进行读写
   # ...
   f.close()
   见:
     10_read_binary_file.py

F.seek()  方法
  F.seek(偏移量, whence=相对位置)
    偏移量:
      大于0代表向文件末尾方向移动
      小于0代表向文件头方向移动
    相对位置:
      0 代表人文件头开始
      1 代表从当前读写位置开始偏移
      2 代表从文件尾开始偏移

  示例见:
    14_file_seek.py


问题:
  十个汉字占多少个字节
    答案:  GBK占20个字节  , UTF-8 占 30个字节

汉字编码:
  国标系列:
    GB18030 (二字节或四字节编码)
        GBK (二字节编码)
            GB2312 (二字节编码)
    (Windows 常用)
  国际标准:
    UNICODE(2/4字节)  <---> UTF-8 (1~6字节)
      (Linux / Mac OS X / IOS / Android 常用)

python 编码(encode) 字符串
  'gb2312'
  'gbk'
  'gb18030'
  'utf-8'
  'ascii'
  ... 以下略


编码注释:
  在源文件的第一行或第二行写入如下内容为编码注释
  # -*- coding:gbk -*-
  # 设置源文件编码为:gbk
  或
  # -*- coding:utf-8 -*-
  # 设置源文件编码为:utf-8



练习:
   1. 写程序让用户输入一系列整数,当输入小于零的数时结束输入
      1) 将输入的数字存于列表中
      2) 将列表中的数字写入到文件numbers.txt中
      (提示: 需要将整数转为字符串或字节串才能存入文件中)

   2. 写程序,将文件numbers.txt中的整数读入到内存中,重新形成数字组成的列表.计算这些数的最大值,最小值,和他们的和

   3. 为学生信息管理项目添加两个功能:
       9)  保存信息到文件(si.txt)
       10) 从文件中读取数据(si.txt)
     (建议: 以行为单位存储数据, 用空格或逗号作为姓名,年龄和成绩的分隔符)

